AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  5. Framework SnapStart

Globals:
  Function:
    Tracing: Active
    CodeUri: target/quarkus-lambda-function-1.0.0-SNAPSHOT-aws.jar
    Handler: io.quarkus.amazon.lambda.runtime.QuarkusStreamHandler::handleRequest
    Runtime: java17
    Timeout: 10
    MemorySize: 2048
    AutoPublishAlias: live
    SnapStart:
      ApplyOn: PublishedVersions
    Environment:
      Variables:
        PRODUCT_TABLE_NAME: !Ref ProductsTable
#        JAVA_TOOL_OPTIONS: "-verbose:class"

Resources:
  PutProductFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: "awsdevday2023tokyo-sls-framework-snapstart"
      Environment:
        Variables:
          quarkus_lambda_handler: createProduct
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProductsTable
      Events:
        PutRequest:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /products/{id}
            Method: put

  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageVariables:
        LambdaAlias: live

  PutProductFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${PutProductFunction}"
      RetentionInDays: 7

  ProductsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: 'PK'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'PK'
          KeyType: 'HASH'
      BillingMode: PAY_PER_REQUEST
      Tags:
        - Key: "DoNotNuke"
          Value: "true"

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL for Prod stage for Quarkus sample function"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/products"
